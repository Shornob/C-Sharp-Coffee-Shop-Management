#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace myProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DBLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    #endregion
		
		public DBLinqDataContext() : 
				base(global::myProject.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Latte;
		
		private string _Espresso;
		
		private string _IcedLatte;
		
		private string _Cappu;
		
		private string _African;
		
		private string _Rglr;
		
		private string _CoffeCake;
		
		private string _RedValvet;
		
		private string _BlackForest;
		
		private string _Boston;
		
		private string _Lagos;
		
		private string _Butter;
		
		private string _CostofDrinks;
		
		private string _CostofCakes;
		
		private string _ServiceCharge;
		
		private string _Vat;
		
		private string _SubTotal;
		
		private string _Total;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLatteChanging(string value);
    partial void OnLatteChanged();
    partial void OnEspressoChanging(string value);
    partial void OnEspressoChanged();
    partial void OnIcedLatteChanging(string value);
    partial void OnIcedLatteChanged();
    partial void OnCappuChanging(string value);
    partial void OnCappuChanged();
    partial void OnAfricanChanging(string value);
    partial void OnAfricanChanged();
    partial void OnRglrChanging(string value);
    partial void OnRglrChanged();
    partial void OnCoffeCakeChanging(string value);
    partial void OnCoffeCakeChanged();
    partial void OnRedValvetChanging(string value);
    partial void OnRedValvetChanged();
    partial void OnBlackForestChanging(string value);
    partial void OnBlackForestChanged();
    partial void OnBostonChanging(string value);
    partial void OnBostonChanged();
    partial void OnLagosChanging(string value);
    partial void OnLagosChanged();
    partial void OnButterChanging(string value);
    partial void OnButterChanged();
    partial void OnCostofDrinksChanging(string value);
    partial void OnCostofDrinksChanged();
    partial void OnCostofCakesChanging(string value);
    partial void OnCostofCakesChanged();
    partial void OnServiceChargeChanging(string value);
    partial void OnServiceChargeChanged();
    partial void OnVatChanging(string value);
    partial void OnVatChanged();
    partial void OnSubTotalChanging(string value);
    partial void OnSubTotalChanged();
    partial void OnTotalChanging(string value);
    partial void OnTotalChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latte", DbType="NVarChar(50)")]
		public string Latte
		{
			get
			{
				return this._Latte;
			}
			set
			{
				if ((this._Latte != value))
				{
					this.OnLatteChanging(value);
					this.SendPropertyChanging();
					this._Latte = value;
					this.SendPropertyChanged("Latte");
					this.OnLatteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Espresso", DbType="NVarChar(50)")]
		public string Espresso
		{
			get
			{
				return this._Espresso;
			}
			set
			{
				if ((this._Espresso != value))
				{
					this.OnEspressoChanging(value);
					this.SendPropertyChanging();
					this._Espresso = value;
					this.SendPropertyChanged("Espresso");
					this.OnEspressoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IcedLatte", DbType="NVarChar(50)")]
		public string IcedLatte
		{
			get
			{
				return this._IcedLatte;
			}
			set
			{
				if ((this._IcedLatte != value))
				{
					this.OnIcedLatteChanging(value);
					this.SendPropertyChanging();
					this._IcedLatte = value;
					this.SendPropertyChanged("IcedLatte");
					this.OnIcedLatteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cappu", DbType="NVarChar(50)")]
		public string Cappu
		{
			get
			{
				return this._Cappu;
			}
			set
			{
				if ((this._Cappu != value))
				{
					this.OnCappuChanging(value);
					this.SendPropertyChanging();
					this._Cappu = value;
					this.SendPropertyChanged("Cappu");
					this.OnCappuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_African", DbType="NVarChar(50)")]
		public string African
		{
			get
			{
				return this._African;
			}
			set
			{
				if ((this._African != value))
				{
					this.OnAfricanChanging(value);
					this.SendPropertyChanging();
					this._African = value;
					this.SendPropertyChanged("African");
					this.OnAfricanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rglr", DbType="NVarChar(50)")]
		public string Rglr
		{
			get
			{
				return this._Rglr;
			}
			set
			{
				if ((this._Rglr != value))
				{
					this.OnRglrChanging(value);
					this.SendPropertyChanging();
					this._Rglr = value;
					this.SendPropertyChanged("Rglr");
					this.OnRglrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoffeCake", DbType="NVarChar(50)")]
		public string CoffeCake
		{
			get
			{
				return this._CoffeCake;
			}
			set
			{
				if ((this._CoffeCake != value))
				{
					this.OnCoffeCakeChanging(value);
					this.SendPropertyChanging();
					this._CoffeCake = value;
					this.SendPropertyChanged("CoffeCake");
					this.OnCoffeCakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedValvet", DbType="NVarChar(50)")]
		public string RedValvet
		{
			get
			{
				return this._RedValvet;
			}
			set
			{
				if ((this._RedValvet != value))
				{
					this.OnRedValvetChanging(value);
					this.SendPropertyChanging();
					this._RedValvet = value;
					this.SendPropertyChanged("RedValvet");
					this.OnRedValvetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlackForest", DbType="NVarChar(50)")]
		public string BlackForest
		{
			get
			{
				return this._BlackForest;
			}
			set
			{
				if ((this._BlackForest != value))
				{
					this.OnBlackForestChanging(value);
					this.SendPropertyChanging();
					this._BlackForest = value;
					this.SendPropertyChanged("BlackForest");
					this.OnBlackForestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Boston", DbType="NVarChar(50)")]
		public string Boston
		{
			get
			{
				return this._Boston;
			}
			set
			{
				if ((this._Boston != value))
				{
					this.OnBostonChanging(value);
					this.SendPropertyChanging();
					this._Boston = value;
					this.SendPropertyChanged("Boston");
					this.OnBostonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lagos", DbType="NVarChar(50)")]
		public string Lagos
		{
			get
			{
				return this._Lagos;
			}
			set
			{
				if ((this._Lagos != value))
				{
					this.OnLagosChanging(value);
					this.SendPropertyChanging();
					this._Lagos = value;
					this.SendPropertyChanged("Lagos");
					this.OnLagosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Butter", DbType="NVarChar(50)")]
		public string Butter
		{
			get
			{
				return this._Butter;
			}
			set
			{
				if ((this._Butter != value))
				{
					this.OnButterChanging(value);
					this.SendPropertyChanging();
					this._Butter = value;
					this.SendPropertyChanged("Butter");
					this.OnButterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostofDrinks", DbType="NVarChar(50)")]
		public string CostofDrinks
		{
			get
			{
				return this._CostofDrinks;
			}
			set
			{
				if ((this._CostofDrinks != value))
				{
					this.OnCostofDrinksChanging(value);
					this.SendPropertyChanging();
					this._CostofDrinks = value;
					this.SendPropertyChanged("CostofDrinks");
					this.OnCostofDrinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostofCakes", DbType="NVarChar(50)")]
		public string CostofCakes
		{
			get
			{
				return this._CostofCakes;
			}
			set
			{
				if ((this._CostofCakes != value))
				{
					this.OnCostofCakesChanging(value);
					this.SendPropertyChanging();
					this._CostofCakes = value;
					this.SendPropertyChanged("CostofCakes");
					this.OnCostofCakesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="NVarChar(50)")]
		public string ServiceCharge
		{
			get
			{
				return this._ServiceCharge;
			}
			set
			{
				if ((this._ServiceCharge != value))
				{
					this.OnServiceChargeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCharge = value;
					this.SendPropertyChanged("ServiceCharge");
					this.OnServiceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vat", DbType="NVarChar(50)")]
		public string Vat
		{
			get
			{
				return this._Vat;
			}
			set
			{
				if ((this._Vat != value))
				{
					this.OnVatChanging(value);
					this.SendPropertyChanging();
					this._Vat = value;
					this.SendPropertyChanged("Vat");
					this.OnVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="NVarChar(50)")]
		public string SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="NVarChar(50)")]
		public string Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
